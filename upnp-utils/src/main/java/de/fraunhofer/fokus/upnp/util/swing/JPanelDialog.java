/**
* 
* Copyright (C) 2004-2008 FhG Fokus
*
* This file is part of the FhG Fokus UPnP stack - an open source UPnP implementation
* with some additional features
*
* You can redistribute the FhG Fokus UPnP stack and/or modify it
* under the terms of the GNU General Public License Version 3 as published by
* the Free Software Foundation.
*
* For a license to use the FhG Fokus UPnP stack software under conditions
* other than those described here, or to purchase support for this
* software, please contact Fraunhofer FOKUS by e-mail at the following
* addresses:
*   upnpstack@fokus.fraunhofer.de
*
* The FhG Fokus UPnP stack is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program; if not, see <http://www.gnu.org/licenses/>
* or write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
*
*/
package de.fraunhofer.fokus.upnp.util.swing;

import java.awt.Frame;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JDialog;
import javax.swing.JPanel;

/**
 * This dialog allows the change of variables.
 * 
 * @author Alexander Koenig
 */
public class JPanelDialog extends JDialog implements ActionListener
{

  private static final long serialVersionUID = 1L;

  private JPanel            addedPanel       = null;

  private boolean           result           = false;

  /** Creates new form JPanelDialog */
  public JPanelDialog(Frame parent, boolean modal)
  {
    super(parent, modal);
    initComponents();
    setSize(300, 100);
  }

  /** Adds an inner panel to this dialog */
  public void addPanel(JPanel panel, int insets)
  {
    addedPanel = panel;
    GridBagConstraints gridBagConstraints;
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new Insets(insets, insets, insets, insets);
    jContentPanel.add(panel, gridBagConstraints);
    invalidate();
  }

  public boolean isValidResult()
  {
    return result;
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
   * content of this method is always regenerated by the Form Editor.
   */
  private void initComponents()// GEN-BEGIN:initComponents
  {
    java.awt.GridBagConstraints gridBagConstraints;

    jContentPanel = new javax.swing.JPanel();
    jButtonPanel = new javax.swing.JPanel();
    jCancelButton = new javax.swing.JButton();
    jOKButton = new javax.swing.JButton();
    jButtonFillPanel = new javax.swing.JPanel();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    jContentPanel.setLayout(new java.awt.GridBagLayout());

    getContentPane().add(jContentPanel, java.awt.BorderLayout.CENTER);

    jButtonPanel.setLayout(new java.awt.GridBagLayout());

    jCancelButton.setFont(new java.awt.Font("Serif", 0, 12));
    jCancelButton.setText("Abbrechen");
    jCancelButton.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jCancelButtonActionPerformed(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
    jButtonPanel.add(jCancelButton, gridBagConstraints);

    jOKButton.setFont(new java.awt.Font("Serif", 0, 12));
    jOKButton.setText("Ok");
    jOKButton.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jOKButtonActionPerformed(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
    jButtonPanel.add(jOKButton, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jButtonPanel.add(jButtonFillPanel, gridBagConstraints);

    getContentPane().add(jButtonPanel, java.awt.BorderLayout.SOUTH);

    pack();
  }// GEN-END:initComponents

  private void jCancelButtonActionPerformed(java.awt.event.ActionEvent evt)
  {// GEN-FIRST:event_jCancelButtonActionPerformed
    result = false;
    setVisible(false);
  }// GEN-LAST:event_jCancelButtonActionPerformed

  private void jOKButtonActionPerformed(java.awt.event.ActionEvent evt)
  {// GEN-FIRST:event_jOKButtonActionPerformed
    result = true;
    setVisible(false);
  }// GEN-LAST:event_jOKButtonActionPerformed

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JPanel  jButtonFillPanel;

  private javax.swing.JPanel  jButtonPanel;

  private javax.swing.JButton jCancelButton;

  private javax.swing.JPanel  jContentPanel;

  private javax.swing.JButton jOKButton;

  // End of variables declaration//GEN-END:variables

  public void actionPerformed(ActionEvent e)
  {
    if (e.getSource() == addedPanel)
    {
      result = e.getActionCommand().equalsIgnoreCase("Enter");
      setVisible(false);
    }
  }

}
